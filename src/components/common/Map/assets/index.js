//Rough categorization for tags of incidents. DS will need to associate a single rank with each incident in the future.
const rankingChart = {
  policePresence: [
    'bike',
    'body-cam',
    'bystander',
    'horse',
    'legal-observer',
    'journalist',
    'elderly',
    'homeless',
    'celebrity',
    'child',
    'politician',
    'pregnant',
    'medic',
    'lgbtq+',
    'conceal',
    'dog',
    'property-destruction',
    'protester',
    'drive',
    'lrad',
    'hide-badge',
    'incitement',
    'non-protest',
    'vehicle',
    'racial-profiling',
    'abuse-of-power',
  ],
  emptyHandForce: ['threaten'],
  bluntForceWeapons: [
    'kick',
    'knee',
    'knee-on-neck',
    'grab',
    'shove',
    'beat',
    'punch',
    'push',
    'tackle',
  ],
  chemicalAndElectricalWeapons: [
    'tear-gas',
    'less-lethal',
    'tear-gas-canister',
    'baton',
    'bean-bag',
    'wooden-bullet',
    'tase',
    'taser',
    'foam-bullet',
    'gas',
    'rubber-bullet',
    'pepper-spray',
    'projectile',
    'mace',
    'stun-greande',
    'spray',
    'pepper-ball',
    'zip-tie',
    'live-round',
    'paintball',
    'sponge-round',
    'marking-round',
    'explosive',
    'person-with-disability',
    'inhumane-treatment',
    'shoot',
    'strike',
    'throw',
    'gun',
    'headlock',
    'arrest',
    'shield',
    'sexual-assault',
  ],
  lethalForce: ['choke', 'death'],
};
function parsedEvent(incident) {
  return {
    geometry: {
      type: 'Point',
      coordinates: [parseFloat(incident.long), parseFloat(incident.lat)],
    },
    type: 'Feature',
    properties: {
      id: incident.id,
      date_text: incident['date'],
      title: incident.title,
      type: incident['tags'],

      link1: incident.src.length ? incident.src[0] : '',
    },
  };
}

export { rankingChart, parsedEvent };
